# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  extension:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: levkk/postgresml:latest
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Train and predict"
          command: "cd pgml-extension; bash docker/entrypoint.sh psql -U postgres -p 5432 -h 127.0.0.1 -d pgml_development -f sql/test.sql -P pager"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  end-to-end-tests:
    jobs:
      - extension



# # Use the latest 2.1 version of CircleCI pipeline process engine.
# # See: https://circleci.com/docs/2.0/configuration-reference
# version: 2.1

# # Define a job to be invoked later in a workflow.
# # See: https://circleci.com/docs/2.0/configuration-reference/#jobs
# jobs:
#   extension:
#     working_directory: ~/postgresml/pgml-extension

#     # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
#     # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
#     docker:
#       - image: circleci/postgres:12.9-ram
#         environment:
#           POSTGRES_USER: postgres
#           POSTGRES_DB: pgml_development
#           POSTGRES_HOST_AUTH_METHOD: trust
#     # Add steps to the job
#     # See: https://circleci.com/docs/2.0/configuration-reference/#steps
#     steps:
#       - checkout:
#           path: ~/postgresml
#       - run:
#           name: Install python
#           command: apt update; apt install python3 python3-pip -y
#       - run:
#           name: Install extension
#           command: pip3 install .
#       # - run:
#       #     name: Install dockerize
#       #     command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
#       #     environment:
#       #       DOCKERIZE_VERSION: v0.6.1
#       # - run:
#       #     name: Wait for db
#       #     command: dockerize -wait tcp://localhost:5432 -timeout 1m
#       - run:
#           name: Install schema
#           command: psql -U postgres -p 5432 -h localhost -d pgml_development -f sql/install.sql -P pager > /dev/null
#       - run:
#           name: Train and predict
#           command: psql -U postgres -p 5432 -h localhost -d pgml_development -f sql/test.sql -P pager


# # Invoke jobs via workflows
# # See: https://circleci.com/docs/2.0/configuration-reference/#workflows
# workflows:
#   end-to-end-tests:
#     jobs:
#       - extension
